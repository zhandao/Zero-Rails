upstream zero_http {
  server unix:<%=  fetch(:puma_socket) %>;
}

server {
  server_name <%=  fetch(:server_name) %>;
  root <%=  fetch(:deploy_to) %>/current/public;

  listen <%=  fetch(:http_port) || 80 %>;

  access_log <%= fetch(:deploy_to) %>/shared/log/access.log;
  error_log <%= fetch(:deploy_to) %>/shared/log/error.log;

  location / {
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    client_max_body_size       50m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
    proxy_temp_file_write_size 256k;


    if (-f $request_filename) {
            break;
    }


    if (!-f $request_filename) {
            proxy_pass  http://zero_http;
            break;
    }
  }

  location ~ ^/(assets|metronic)/  {
    root <%=  fetch(:deploy_to) %>/current/public;
    gzip_static on;
    expires max;
    add_header Cache-Control public;

    if ($request_filename ~* ^.*?\.(eot)|(ttf)|(woff)|(svg)|(otf)$){
      add_header Access-Control-Allow-Origin *;
    }
    break;
  }
}
