# *** Generated by ZRO [ please make sure that you have checked this file ] ***

require 'rails_helper'

RSpec.describe 'API V1', 'goods', type: :request do
  let(:json) { MultiJson.load(response.body, symbolize_keys: true) }

  describe 'GET /api/v1/goods #index, GET list of goods.' do
    let(:right_input) { { Token: 'Token', view: :view, search_type: :search_type, value: :value, created_start_at: :created_start_at, created_end_at: :created_end_at, page: :page, rows: :rows, export: :export } }

    describe 'business scenario x' do
      context 'when case y' do
        it 'does something, parameter validation failed' do
          get '/api/v1/goods', view: 'wrong value'
          expect(json['code']).to eq 400
        end

        before { get '/api/v1/goods', right_input.merge(page: 2, rows: 8) }
        it { expect(json['code']).to eq 200 }

        it 'does another thing' do
          get '/api/v1/goods', view: 'wrong value'
          expect(json['code']).not_to eq 200
          expect(json['data']).not_to include(name: 'good1')
        end
      end
    end

    it 'does z' do
      get '/api/v1/goods'
    end
  end

  describe 'GET /api/v1/goods/{id} #show, GET the specified good.' do
    let(:params) { { Token: '123456', id: 'integer' } }

    describe 'business scenario x' do
      context 'when case y' do
        it 'does something' do
          get "/api/v1/goods/#{id}"
        end

        before { get "/api/v1/goods/#{id}", params.merge(page: 2, rows: 10) }
        it { expect(json['code']).to eq 200 }

        it 'does another thing' do
          get "/api/v1/goods/#{id}"
        end
      end
    end

    it 'does z' do
      get "/api/v1/goods/#{id}"
    end
  end


end
